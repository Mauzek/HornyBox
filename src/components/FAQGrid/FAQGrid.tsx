import { useCallback, useState } from "react";
import styles from "./FAQGrid.module.scss";
import { Accordion } from "./Accordion";

const faqData = [
  {
    id: "1",
    title: "Насколько быстрое у вас пополнение?",
    content:
      "<p>Пополнение происходит как правило мгновенно, однако задержка может составлять до двух часов. Если товар не пришел по истечении этого времени, наша поддержка поможет решить вопрос.</p>",
  },
  {
    id: "2",
    title: "Это безопасно?",
    content:
      "<p>Да, мы работаем только с официальными партнерами, которые служат гарантом качества.</p>",
  },
  {
    id: "3",
    title: "Как образуется цена?",
    content:
      "<p>Есть изначальная цена товара, которая зависит от курса рубля, и наша цена продажи. Но, кроме этого, существуют дополнительные расходы, как: оплата банковской комиссии за факт оплаты; налог на прибыль; оплата услуг банка; пенсионные, медицинские, социальные, страховые взносы; оплата работы сотрудников; оплата и ведение кассы; прочие расходы, не говоря уже о трудозатратах на поддержание стабильной работы. Конечно, если работать «в чёрную», зарегистрироваться в другой стране и не платить почти ничего из вышеперечисленного, то цену можно сильно снизить, но насколько подобная схема будет безопасна для аккаунта — это вопрос отдельного обсуждения.</p>",
  },
  {
    id: "4",
    title: "Можно ли купить еще дешевле?",
    content:
      "<p>Да, мы уведомляем о предстоящих скидках, бонусах в самой игре, а также выгодных предложениях <a href='https://t.me/HornyGem' target='_blank' rel='noopener'>непосредственно от нас</a>.</p>",
  },
];

export const FAQGrid = () => {
  const [activeId, setActiveId] = useState<string | null>(null);

  const toggleAccordion = useCallback((id: string) => {
    setActiveId((prev) => (prev === id ? null : id));
  }, []);
  
  return (
    <div className={styles.grid_container}>
      {faqData.map(({ id, title, content }) => (
        <Accordion
          key={id}
          id={id}
          title={title}
          content={content}
          isOpen={activeId === id}
          onToggle={toggleAccordion}
        />
      ))}
    </div>
  );
};
